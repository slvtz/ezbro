--[[VARIABLE DEFINITION ANOMALY DETECTED, DECOMPILATION OUTPUT POTENTIALLY INCORRECT]]--
--[[VARIABLE DEFINITION ANOMALY DETECTED, DECOMPILATION OUTPUT POTENTIALLY INCORRECT]]--
-- Decompiled with the Synapse X Luau decompiler.

return (function(p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, p21, p22, p23, p24, p25, p26, p27, p28, p29, p30, p31, p32, p33, p34, p35, p36, p37, p38, p39, p40, p41, p42, p43, p44, p45, p46, p47, p48, p49, p50, p51, p52, p53, p54, p55, p56, p57, p58, p59, p60, ...)
	local v1 = p49[p47];
	local v2 = p49[p46];
	local v3 = p49[p48];
	local v4 = p22;
	local v5 = p49[p43];
	for v6 = 0, 2 do
		if v6 <= 0 then
			v4 = p35();
		elseif v6 ~= 1 then
			local v7 = {};
		end;
	end;
	local v8 = 0;
	local v9 = p22;
	local v10 = p22;
	local v11 = p22;
	local v12 = p22;
	local v13 = p22;
	local v14 = p22;
	while true do
		if not (v8 <= 3) then
			if not (v8 <= 5) then
				if not (v8 <= 6) then
					if v8 ~= 7 then
						v13 = 4294967296;
						v8 = 2;
					else
						local u1 = p22;
						v10 = v3(v5(v10, 5), p42, function(p61)
							local v15 = nil;
							if v1(p61, 2) == 72 then
								u1 = p20(v5(p61, 1, 1));
								return p31;
							end;
							v15 = v2(p20(p61, 16));
							if not u1 then
								return v15;
							end;
							u1 = p22;
							return p45(v15, u1);
						end);
						v8 = 3;
					end;
				else
					local u2 = 1;
					v12 = function()
						local v16 = p22;
						local v17 = p22;
						for v18 = 0, 2 do
							if not (v18 <= 0) then
								if v18 ~= 1 then
									return v16;
								end;
								u2 = v17;
							else
								local v19, v20 = p52(p33, v10, u2);
								v16 = v19;
								v17 = v20;
							end;
						end;
					end;
					v8 = 5;
				end;
			elseif v8 ~= 4 then
				v8 = 8;
			else
				v8 = 7;
			end;
		elseif not (v8 <= 1) then
			if v8 ~= 2 then
				local u3 = 1;
				v11 = function()
					local v21 = v1(v10, u3, u3);
					u3 = u3 + 1;
					return v21;
				end;
				v8 = 6;
			else
				v8 = 9;
			end;
		elseif v8 ~= 0 then
			v10 = p1;
			v8 = 4;
		else
			v8 = 1;
		end;
		if v8 >= 9 then
			break;
		end;	
	end;
	local v22 = 1;
	local v23 = p22;
	local v24 = p22;
	while v22 <= 2 do
		if not (v22 <= 0) then
			if v22 ~= 1 then
				local v25 = 0;
				local v26 = p22;
				while p6 do
					if v25 ~= 0 then
						for v27 = 1, 31 do
							local v28 = 1;
							while true do
								if v28 ~= 0 then
									v23[v27] = v26;
									v28 = 0;
								else
									v26 = v26 * 2;
									v28 = 2;
								end;
								if v28 == 2 then
									break;
								end;							
							end;
						end;
						break;
					end;
					v26 = 2;
					v25 = 1;				
				end;
				v22 = 0;
			else
				v23 = {
					[0] = 1
				};
				v22 = 2;
			end;
		else
			v24 = function(p62, p63, p64)
				local v29 = 1;
				local v30 = p22;
				while p6 do
					if v29 == 0 then
						return v30 - v30 % 1;
					end;
					v30 = p63 / v23[p64] % v23[p62];
					v29 = 0;				
				end;
				return v30;
			end;
			v22 = 3;
		end;	
	end;
	local v31 = 2;
	local v32 = p22;
	local v33 = p22;
	local v34 = p22;
	while true do
		if not (v31 <= 0) then
			if v31 == 1 then
				v34 = p23;
				break;
			end;
			local u4 = 1;
			v32 = function()
				local v35 = 0;
				local v36 = p22;
				local v37 = p22;
				while p6 do
					if v35 <= 0 then
						local v38, v39 = p52(p25, v10, u4);
						v36 = v38;
						v37 = v39;
						v35 = 1;
					else
						if v35 ~= 1 then
							return v36;
						end;
						u4 = v37;
						v35 = 2;
					end;				
				end;
			end;
			v31 = 0;
		else
			local u5 = 1;
			v33 = function()
				local v40, v41 = p52(p37, v10, u5);
				u5 = v41;
				return v40;
			end;
			v31 = 1;
		end;
		if p9 then
			break;
		end;	
	end;
	local v42 = p34[p12];
	local v43 = 2;
	local v44 = p22;
	local v45 = p22;
	local v46 = p22;
	while v43 ~= 5 do
		if v43 <= 1 then
			if v43 ~= 0 then
				v46 = {};
				v43 = 5;
			else
				local u6 = v14;
				v45 = function(p65)
					local v47 = p22;
					local v48 = p22;
					local v49 = 4;
					while true do
						if not (v49 <= 1) then
							if not (v49 <= 2) then
								if v49 ~= 3 then
									v47 = v12();
									v49 = 2;
								else
									u5 = u5 + v47;
									v49 = 1;
								end;
							else
								v48 = p31;
								v49 = 0;
							end;
						else
							if v49 ~= 0 then
								return v48;
							end;
							for v50 = 1, v47, 7997 do
								local v51 = 2;
								local v52 = p22;
								local v53 = p22;
								while p6 do
									if v51 <= 1 then
										if v51 ~= 0 then
											v48 = v48 .. v2(p4(v53));
											break;
										end;
										if v47 < v52 then
											v52 = v47;
										end;
										v51 = 4;
									elseif not (v51 <= 2) then
										if v51 ~= 3 then
											v53 = { v1(v10, u5 + v50 - 1, u5 + v52 - 1) };
											v51 = 3;
										else
											for v54 = 1, #v53 do
												for v55 = 0, 1 do
													if v55 ~= 0 then
														u6 = (p65 * u6 + 83) % p8;
													else
														v53[v54] = v34(v53[v54], u6);
													end;
												end;
											end;
											v51 = 1;
										end;
									else
										v52 = v50 + 7997 - 1;
										v51 = 0;
									end;								
								end;
							end;
							v49 = 3;
						end;
						if p9 then
							break;
						end;					
					end;
				end;
				v43 = 4;
			end;
		elseif not (v43 <= 2) then
			if v43 ~= 3 then
				v14 = v11();
				v43 = 3;
			else
				v9 = v11();
				v43 = 1;
			end;
		else
			local u7 = v9;
			v44 = function(p66)
				local v56 = p22;
				local v57 = p22;
				local v58 = p22;
				local v59 = p22;
				local v60 = 0;
				while v60 < 4 do
					if not (v60 <= 1) then
						if v60 ~= 2 then
							v57 = v34(v56[1], u7);
							v60 = 1;
						else
							v59 = v34(v56[3], u7);
							v60 = 4;
						end;
					elseif v60 ~= 0 then
						v58 = v34(v56[2], u7);
						v60 = 2;
					else
						v56 = { v1(v10, u5, u5 + 3) };
						v60 = 3;
					end;				
				end;
				local v61 = v34(v56[4], u7);
				for v62 = 0, 2 do
					if not (v62 <= 0) then
						if v62 ~= 1 then
							return v61 * 16777216 + v59 * 65536 + v58 * 256 + v57;
						end;
						u5 = u5 + 4;
					else
						u7 = (221 * u7 + p66) % 256;
					end;
				end;
			end;
			v43 = 0;
		end;	
	end;
	for v63 = 1, v11() do
		local v64 = 0;
		local v65 = p22;
		while v64 <= 2 do
			if not (v64 <= 0) then
				if v64 ~= 1 then
					v46[v63 - 1] = v65;
					v64 = 1;
				else
					for v66 = 1, v11() do
						local v67 = 1;
						local v68 = p22;
						local v69 = p22;
						while true do
							if not (v67 <= 1) then
								if v67 ~= 2 then
									v69 = (v66 - 1) * 2;
									v67 = 0;
								else
									v65[v69 + 1] = v24(4, v68, 4);
									v67 = 4;
								end;
							elseif v67 == 0 then
								v65[v69] = v24(4, v68, 0);
								v67 = 2;
							else
								v68 = v11();
								v67 = 3;
							end;
							if v67 > 3 then
								break;
							end;						
						end;
					end;
					v64 = 3;
				end;
			else
				v65 = {};
				v64 = 2;
			end;		
		end;
	end;
	local function v70(...)
		return p32(p36, ...), { ... };
	end;
	local v71 = p22;
	local v72 = p22;
	for v73 = 0, 1 do
		if v73 ~= 0 then
			v72 = 1;
		else
			v71 = {};
		end;
	end;
	local v74 = 4;
	local v75 = p22;
	local v76 = p22;
	while v74 < 5 do
		if not (v74 <= 1) then
			if not (v74 <= 2) then
				if v74 == 3 then
					v74 = 2;
				else
					v75 = {};
					v74 = 3;
				end;
			else
				local function u8(p67, p68, p69)
					local v77 = p68[3];
					local v78 = p68[1];
					local u9 = p68[8];
					local u10 = p68[2];
					local u11 = p68[6];
					local u12 = p68[5];
					local u13 = p51({}, {
						[p56] = p54
					});
					local u14 = p68[4];
					local u15 = p68[7];
					local function u16(...)
						local v79 = {};
						local v80 = p35();
						local v81 = v80 == v4 and p67 or v80;
						local v82, v83 = v70(...);
						local v84 = v82 - 1;
						local v85 = 0 - 1;
						while v85 < u9 do
							v79[v85] = v83[v85 + 1];
							if 0 <= 1 then
								if not (v85 < v84) then
									break;
								end;
							elseif not (v84 < v85) then
								break;
							end;
							v85 = v85 + 1;						
						end;
						v75[3] = p68;
						v75[4] = v79;
						if not u10 then
							v83 = p22;
						elseif u11 then
							v79[u9] = {
								[p7] = u9 <= v84 and v84 - u9 + 1 or 0,
								p4(v83, u9 + 1, v84 + 1)
							};
						end;
						if v81 ~= v80 then
							p21(u16, v81);
						end;
						local u17 = 1;
						local u18 = 0;
						local v86, v87, v88, v89 = p55(function()
							local v90 = nil;
							while true do
								v90 = u12[u17];
								local v91 = v90[3];
								u17 = u17 + 1;
								if v91 >= 62 then
									if not (v91 >= 93) then
										if not (v91 >= 77) then
											if not (v91 >= 69) then
												if not (v91 >= 65) then
													if not (v91 >= 63) then
														v79[v90[10]] = v90[9] - v79[v90[4]];
													else
														if v91 ~= 64 then
															while true do
																if #u13 > 0 then
																	local v92 = {};
																	for v93, v94 in p38, u13 do
																		for v95, v96 in p38, v94 do
																			if v96[1] == v79 and v96[2] >= 0 then
																				local v97 = v96[2];
																				if not v92[v97] then
																					v92[v97] = { v79[v97] };
																				end;
																				v96[1] = v92[v97];
																				v96[2] = 1;
																			end;
																		end;
																	end;
																end;
																if p6 then
																	break;
																end;															
															end;
															return p6, v90[10], 0;
														end;
														u18 = v90[10];
														v79[u18] = v79[u18]();
													end;
												elseif not (v91 < 67) then
													if v91 ~= 68 then
														local v98 = v79[v90[5]] / v90[8];
														v79[v90[10]] = v98 - v98 % 1;
													else
														local v99 = v90[10];
														v79[v99](v79[v99 + 1]);
														u18 = v99 - 1;
													end;
												elseif v91 == 66 then
													local v100 = v90[9] / v90[8];
													v79[v90[10]] = v100 - v100 % 1;
												else
													v79[v90[10]] = p9;
												end;
											elseif not (v91 >= 73) then
												if not (v91 >= 71) then
													if v91 ~= 70 then
														while true do
															if #u13 > 0 then
																local v101 = {};
																for v102, v103 in p38, u13 do
																	for v104, v105 in p38, v103 do
																		if v105[1] == v79 and v105[2] >= 0 then
																			local v106 = v105[2];
																			if not v101[v106] then
																				v101[v106] = { v79[v106] };
																			end;
																			v105[1] = v101[v106];
																			v105[2] = 1;
																		end;
																	end;
																end;
															end;
															if p6 then
																break;
															end;														
														end;
														return p9, v90[10], u18;
													end;
													if not (v79[v90[5]] < v90[8]) then
														u17 = u17 + 1;
													end;
												elseif v91 == 72 then
													v79[v90[10]][v79[v90[5]]] = v79[v90[4]];
												else
													v79[v90[10]] = v90[8] <= v90[9];
												end;
											elseif not (v91 < 75) then
												if v91 == 76 then
													v79[v90[10]] = v90[9] <= v90[8];
												else
													v79[v90[10]] = v79[v90[4]] < v90[9];
												end;
											elseif v91 == 74 then
												if v90[4] ~= 68 then
													while true do
														if #u13 > 0 then
															local v107 = {};
															for v108, v109 in p38, u13 do
																for v110, v111 in p38, v109 do
																	if v111[1] == v79 and v111[2] >= 0 then
																		local v112 = v111[2];
																		if not v107[v112] then
																			v107[v112] = { v79[v112] };
																		end;
																		v111[1] = v107[v112];
																		v111[2] = 1;
																	end;
																end;
															end;
														end;
														if p6 then
															break;
														end;													
													end;
													return;
												end;
												u17 = u17 - 1;
												u12[u17] = {
													[3] = 14, 
													[5] = (v90[5] - 70) % p8, 
													[10] = (v90[10] - 70) % 256
												};
											else
												v79[v90[10]] = p60(v79[v90[5]], v90[8]);
											end;
										elseif not (v91 >= 85) then
											if not (v91 < 81) then
												if not (v91 < 83) then
													if v91 ~= 84 then
														if v90[9] ~= v79[v90[4]] then
															u17 = u17 + 1;
														end;
													elseif v79[v90[5]] ~= v90[8] then
														u17 = u17 + 1;
													end;
												elseif v91 == 82 then
													u18 = v90[10];
													v79[u18]();
													u18 = u18 - 1;
												elseif not (v90[9] < v79[v90[4]]) then
													u17 = u17 + 1;
												end;
											elseif not (v91 < 79) then
												if v91 == 80 then
													v79[v90[10]] = {};
												else
													v79[v90[10]] = v79[v90[4]] <= v79[v90[5]];
												end;
											elseif v91 == 78 then
												v79[v90[10]] = p60(v90[9], v79[v90[4]]);
											else
												v79[v90[10]] = v90[9] == v79[v90[4]];
											end;
										elseif not (v91 >= 89) then
											if not (v91 < 87) then
												if v91 ~= 88 then
													local v113 = v90[10];
													for v114 = v113, v113 + (v90[5] - 1) do
														v79[v114] = v83[u9 + (v114 - v113) + 1];
													end;
												else
													v79[v90[10]] = p18(v79[v90[5]], v79[v90[4]]);
												end;
											elseif v91 == 86 then
												v79[v90[10]] = v79[v90[5]] == v90[8];
											else
												v81[v90[1]] = v79[v90[10]];
											end;
										elseif v91 < 91 then
											if v91 == 90 then
												local v115 = v90[10];
												local v116 = v79[v115 + 2];
												local v117 = v79[v115] + v116;
												v79[v115] = v117;
												if not (v116 > 0) then
													if v79[v115 + 1] <= v117 then
														u17 = v90[7];
														v79[v115 + 3] = v117;
													end;
												elseif v117 <= v79[v115 + 1] then
													u17 = v90[7];
													v79[v115 + 3] = v117;
												end;
											else
												v79[v90[10]] = v79[v90[5]] * v90[8];
											end;
										elseif v91 ~= 92 then
											v79[v90[10]] = v81[v90[1]];
										else
											v79[v90[10]] = v34(v79[v90[5]], v79[v90[4]]);
										end;
									elseif not (p10 <= v91) then
										if v91 < 100 then
											if not (v91 < 96) then
												if not (v91 < 98) then
													if v91 ~= 99 then
														v79[v90[10]] = v75[v90[5]];
													else
														v79[v90[10]] = v34(v90[9], v79[v90[4]]);
													end;
												elseif v91 == 97 then
													if not (v90[9] <= v90[8]) then
														u17 = u17 + 1;
													end;
												else
													v79[v90[10]] = v79[v90[5]] % v79[v90[4]];
												end;
											elseif not (v91 >= 94) then
												if v90[4] ~= 110 then
													v79[v90[10]] = #v79[v90[5]];
												else
													u17 = u17 - 1;
													u12[u17] = {
														[5] = (v90[5] - 24) % 256, 
														[3] = 14, 
														[10] = (v90[10] - 24) % p8
													};
												end;
											elseif v91 ~= 95 then
												v79[v90[10]][v90[9]] = v90[8];
											else
												local v118 = v90[10];
												v79[v118] = v79[v118](v79[v118 + 1], v79[v118 + 2]);
												u18 = v118;
											end;
										elseif not (v91 < p5) then
											if v91 < 106 then
												if v91 ~= 105 then
													v79[v90[10]] = v90[9] ^ v90[8];
												else
													v79[v90[10]] = v79[v90[5]] ~= v90[8];
												end;
											elseif v91 == 107 then
												v79[v90[10]] = p18(v79[v90[5]], v90[8]);
											else
												v75[v90[5]] = v79[v90[10]];
											end;
										elseif not (v91 >= 102) then
											if v91 == 101 then
												local v119 = v90[10];
												u18 = v119 + v90[5] - 1;
												v79[v119] = v79[v119](p4(v79, v119 + 1, u18));
												u18 = v119;
											else
												for v120 = v90[10], v90[5] do
													v79[v120] = p22;
												end;
											end;
										elseif v91 ~= p16 then
											local v121 = v79[v90[5]] / v79[v90[4]];
											v79[v90[10]] = v121 - v121 % 1;
										else
											v79[v90[10]] = v90[9] ~= v90[8];
										end;
									elseif v91 < 116 then
										if not (v91 >= 112) then
											if not (v91 < p50) then
												if v91 ~= 111 then
													if v90[4] ~= 95 then
														v79[v90[10]] = not v79[v90[5]];
													else
														u17 = u17 - 1;
														u12[u17] = {
															[3] = 69, 
															[5] = (v90[5] - p29) % 256, 
															[10] = (v90[10] - 138) % 256
														};
													end;
												elseif v79[v90[5]] ~= v79[v90[4]] then
													u17 = u17 + 1;
												end;
											elseif v91 == 109 then
												if v90[4] ~= 65 then
													v79[v90[10]] = -v79[v90[5]];
												else
													u17 = u17 - 1;
													u12[u17] = {
														[3] = 69, 
														[5] = (v90[5] - 106) % 256, 
														[10] = (v90[10] - 106) % 256
													};
												end;
											else
												local v122 = v79[v90[5]];
												local v123 = v90[10];
												v79[v123 + 1] = v122;
												v79[v123] = v122[v90[8]];
											end;
										elseif v91 >= 114 then
											if v91 == 115 then
												v79[v90[10]] = v42(v79[v90[5]], v90[8]);
											else
												v79[v90[10]] = p6;
												u17 = u17 + 1;
											end;
										elseif v91 == p15 then
											v79[v90[10]] = p6;
										else
											v79[v90[10]] = v42(v90[9], v90[8]);
										end;
									elseif not (p58 <= v91) then
										if not (v91 >= 118) then
											if v91 ~= 117 then
												v79[v90[10]] = v90[9] / v90[8];
											else
												v79[v90[10]] = v79[v90[5]][v79[v90[4]]];
											end;
										elseif v91 ~= p11 then
											local v124 = v90[5];
											v79[v90[10]] = v79[v124] .. v79[v124 + 1];
										else
											v79[v90[10]] = { p4({}, 1, v90[5]) };
										end;
									elseif v91 < 122 then
										if v91 == 121 then
											if v79[v90[5]] == v79[v90[4]] then
												u17 = u17 + 1;
											end;
										else
											v79[v90[10]] = v79[v90[5]] + v90[8];
										end;
									elseif v91 ~= 123 then
										v79[v90[10]] = p60(v79[v90[5]], v79[v90[4]]);
									else
										local v125 = v90[10];
										local v126 = (v90[4] - 1) * 50;
										for v127 = 1, v90[5] do
											v79[v125][v126 + v127] = v79[v125 + v127];
										end;
									end;
								elseif not (v91 >= 31) then
									if not (v91 >= 15) then
										if not (v91 >= 7) then
											if not (v91 >= 3) then
												if v91 >= 1 then
													if v91 ~= 2 then
														v79[v90[10]] = v79[v90[5]] / v79[v90[4]];
													else
														v79[v90[10]] = v90[8] < v90[9];
													end;
												else
													v79[v90[10]] = v79[v90[4]] < v79[v90[5]];
												end;
											elseif v91 < 5 then
												if v91 == 4 then
													v79[v90[10]] = v90[1];
												else
													local v128 = v90[10];
													u18 = v128 + v90[5] - 1;
													v79[v128](p4(v79, v128 + 1, u18));
													u18 = v128 - 1;
												end;
											elseif v91 == 6 then
												u17 = v90[7];
											else
												local v129 = v90[10];
												v79[v129](p4(v79, v129 + 1, u18));
												u18 = v129 - 1;
											end;
										elseif not (v91 < 11) then
											if not (v91 < 13) then
												if v91 == 14 then
													if #u13 > 0 then
														local v130 = {};
														for v131, v132 in p38, u13 do
															for v133, v134 in p38, v132 do
																if v134[1] == v79 and v134[2] >= 0 then
																	local v135 = v134[2];
																	if not v130[v135] then
																		v130[v135] = { v79[v135] };
																	end;
																	v134[1] = v130[v135];
																	v134[2] = 1;
																end;
															end;
														end;
													end;
													local v136 = v90[10];
													return false, v136, v136 + v90[5] - 2;
												end;
												v79[v90[10]] = v79[v90[5]] * v79[v90[4]];
											elseif v91 ~= 12 then
												v79[v90[10]] = p27(v90[9], v90[8]);
											else
												local v137 = v90[10];
												v79[v137] = v79[v137](p4(v79, v137 + 1, u18));
												u18 = v137;
											end;
										elseif not (v91 < 9) then
											if v91 == 10 then
												local v138 = v90[5];
												local v139 = v90[4];
												local v140 = v90[10];
												if v138 ~= 0 then
													u18 = v140 + v138 - 1;
												end;
												if v138 ~= 1 then
													local v141, v142 = v70(v79[v140](p4(v79, v140 + 1, u18)));
													local v143 = v141;
													local v144 = v142;
												else
													local v145, v146 = v70(v79[v140]());
													v143 = v145;
													v144 = v146;
												end;
												if v139 ~= 1 then
													if v139 == 0 then
														local v147 = v143 + v140 - 1;
														u18 = v147;
													else
														v147 = v140 + v139 - 2;
														u18 = v147 + 1;
													end;
													local v148 = 0;
													for v149 = v140, v147 do
														v148 = v148 + 1;
														v79[v149] = v144[v148];
													end;
												else
													u18 = v140 - 1;
												end;
											elseif v90[9] ~= v90[8] then
												u17 = u17 + 1;
											end;
										elseif v91 ~= 8 then
											local v150 = nil;
											local v151 = u14[v90[7]];
											local v152 = v151[9];
											if v152 > 0 then
												v150 = {};
												for v153 = 0, v152 - 1 do
													local v154 = u12[u17];
													if v154[3] ~= 35 then
														v150[v153] = p69[v154[5]];
													else
														v150[v153] = { v79, v154[5] };
													end;
													u17 = u17 + 1;
												end;
												p59(u13, v150);
											end;
											v79[v90[10]] = u8(v81, v151, v150);
										else
											v79[v90[10]][v79[v90[5]]] = v90[8];
										end;
									elseif not (v91 >= 23) then
										if not (v91 < 19) then
											if not (v91 < 21) then
												if v91 ~= 22 then
													v79[v90[10]] = p27(v79[v90[5]], v79[v90[4]]);
												else
													v79[v90[10]] = v79[v90[5]] + v79[v90[4]];
												end;
											elseif v91 ~= 20 then
												v79[v90[10]] = v79[v90[4]] <= v90[9];
											else
												v79[v90[10]] = v79[v90[5]] < v90[8];
											end;
										elseif not (v91 < 17) then
											if v91 ~= 18 then
												local v155 = nil;
												local v156 = v90[5];
												v155 = v79[v156];
												for v157 = v156 + 1, v90[4] do
													v155 = v155 .. v79[v157];
												end;
												v79[v90[10]] = local v158;
											else
												v79[v90[10]] = v90[9] < v90[8];
											end;
										else
											if v91 == 16 then
												if #u13 > 0 then
													local v159 = {};
													for v160, v161 in p38, u13 do
														for v162, v163 in p38, v161 do
															if v163[1] == v79 and v163[2] >= 0 then
																local v164 = v163[2];
																if not v159[v164] then
																	v159[v164] = { v79[v164] };
																end;
																v163[1] = v159[v164];
																v163[2] = 1;
															end;
														end;
													end;
												end;
												return true, v90[10], 1;
											end;
											if not (v79[v90[5]] <= v90[8]) then
												u17 = u17 + 1;
											end;
										end;
									elseif not (v91 < 27) then
										if not (v91 < 29) then
											if v91 == 30 then
												local v165 = p69[v90[5]];
												v79[v90[10]] = v165[1][v165[2]];
											else
												v79[v90[10]] = v90[8] < v79[v90[5]];
											end;
										elseif v91 ~= 28 then
											local v166 = p69[v90[5]];
											v166[1][v166[2]] = v79[v90[10]];
										else
											local v167 = v84 - u9;
											local v168 = v90[10];
											if v167 < 0 then
												v167 = -1;
											end;
											for v169 = v168, v168 + v167 do
												v79[v169] = v83[u9 + (v169 - v168) + 1];
											end;
											u18 = v168 + v167;
										end;
									elseif v91 < 25 then
										if v91 ~= 24 then
											local v170 = v90[10];
											local v171 = v170 + 2;
											local v172 = { v79[v170](v79[v170 + 1], v79[v171]) };
											for v173 = 1, v90[4] do
												v79[v171 + v173] = v172[v173];
											end;
											local v174 = v79[v170 + 3];
											if v174 == nil then
												u17 = u17 + 1;
											else
												v79[v171] = v174;
											end;
										elseif v79[v90[5]] <= v90[8] then
											u17 = u17 + 1;
										end;
									elseif v91 ~= 26 then
										if not (v90[9] <= v79[v90[4]]) then
											u17 = u17 + 1;
										end;
									else
										v79[v90[10]] = v79[v90[5]] == v79[v90[4]];
									end;
								elseif not (v91 >= 46) then
									if not (v91 < 38) then
										if not (v91 >= 42) then
											if v91 >= 40 then
												if v91 == 41 then
													local v175 = v90[10];
													v79[v175] = v79[v175](v79[v175 + 1]);
													u18 = v175;
												else
													v79[v90[10]] = v79[v90[5]] ^ v79[v90[4]];
												end;
											elseif v91 ~= 39 then
												v79[v90[10]] = v79[v90[5]] < v79[v90[4]];
											else
												v79[v90[10]] = v79[v90[5]][v90[8]];
											end;
										elseif not (v91 < 44) then
											if v91 ~= 45 then
												local v176 = (v90[4] - 1) * 50;
												local v177 = v90[10];
												for v178 = 1, u18 - v177 do
													v79[v177][v176 + v178] = v79[v177 + v178];
												end;
											else
												v79[v90[10]] = v79[v90[5]] <= v79[v90[4]];
											end;
										elseif v91 == 43 then
											local v179 = v90[10];
											local v180 = v79[v90[5]];
											v79[v179 + 1] = v180;
											v79[v179] = v180[v79[v90[4]]];
										elseif v90[4] == 38 then
											u17 = u17 - 1;
											u12[u17] = {
												[3] = 69, 
												[10] = (v90[10] - 50) % 256, 
												[5] = (v90[5] - 50) % 256
											};
										else
											v79[v90[10]] = v83[u9 + 1];
										end;
									elseif not (v91 < 34) then
										if v91 >= 36 then
											if v91 ~= 37 then
												v79[v90[10]] = v90[1];
											else
												local v181 = v90[10];
												local v182 = v181 + 1;
												local v183 = v181 + 2;
												v79[v181] = p39(p20(v79[v181]), p14);
												v79[v182] = p39(p20(v79[v182]), p19);
												v79[v183] = p39(p20(v79[v183]), p44);
												v79[v181] = v79[v181] - v79[v183];
												u17 = v90[7];
											end;
										elseif v91 ~= 35 then
											if v79[v90[10]] then
												u17 = u17 + 1;
											end;
										elseif v90[4] == 153 then
											u17 = u17 - 1;
											u12[u17] = {
												[10] = (v90[10] - 65) % 256, 
												[3] = 93, 
												[5] = (v90[5] - 65) % 256
											};
										elseif v90[4] ~= p17 then
											v79[v90[10]] = v79[v90[5]];
										else
											u17 = u17 - 1;
											u12[u17] = {
												[3] = 14, 
												[5] = (v90[5] - 180) % 256, 
												[10] = (v90[10] - p13) % 256
											};
										end;
									else
										if v91 < 32 then
											break;
										end;
										if v91 ~= 33 then
											if v90[4] == 91 then
												u17 = u17 - 1;
												u12[u17] = {
													[10] = (v90[10] - 158) % 256, 
													[3] = 55, 
													[4] = (v90[5] - 158) % 256
												};
											elseif v90[4] ~= 40 then
												v79[v90[10]] = p22;
											else
												u17 = u17 - 1;
												u12[u17] = {
													[3] = 34, 
													[10] = (v90[10] - 21) % 256, 
													[4] = (v90[5] - 21) % 256
												};
											end;
										else
											v79[v90[10]] = v79[v90[5]] % v90[8];
										end;
									end;
								elseif not (v91 >= 54) then
									if not (v91 >= 50) then
										if not (v91 < 48) then
											if v91 ~= 49 then
												v79[v90[10]] = v90[9] < v79[v90[4]];
											else
												v79[v90[10]] = p60(v90[9], v90[8]);
											end;
										elseif v91 == 47 then
											v79[v90[10]] = v34(v90[9], v90[8]);
										else
											local v184 = v79[v90[5]];
											if v184 then
												v79[v90[10]] = v184;
											else
												u17 = u17 + 1;
											end;
										end;
									elseif v91 < 52 then
										if v91 == 51 then
											if v90[4] ~= 157 then
												while true do
													local v185 = v90[10];
													if #u13 > 0 then
														local v186 = {};
														for v187, v188 in p38, u13 do
															for v189, v190 in p38, v188 do
																if v190[1] == v79 and v185 <= v190[2] then
																	local v191 = v190[2];
																	if not v186[v191] then
																		v186[v191] = { v79[v191] };
																	end;
																	v190[1] = v186[v191];
																	v190[2] = 1;
																end;
															end;
														end;
													end;
													if p6 then
														break;
													end;												
												end;
											else
												u17 = u17 - 1;
												u12[u17] = {
													[5] = (v90[5] - 73) % 256, 
													[3] = 109, 
													[10] = (v90[10] - 73) % 256
												};
											end;
										elseif v90[9] < v79[v90[4]] then
											u17 = u17 + 1;
										end;
									elseif v91 ~= 53 then
										v79[v90[10]] = v90[9] + v79[v90[4]];
									else
										v79[v90[10]] = v90[9] % v90[8];
									end;
								elseif v91 >= 58 then
									if not (v91 >= 60) then
										if v91 ~= 59 then
											if v79[v90[5]] == v90[8] then
												u17 = u17 + 1;
											end;
										else
											v79[v90[10]] = v79[v90[5]] <= v90[8];
										end;
									elseif v91 ~= 61 then
										local v192 = v90[10];
										v79[v192](v79[v192 + 1], v79[v192 + 2]);
										u18 = v192 - 1;
									else
										v79[v90[10]] = v79[v90[5]] - v79[v90[4]];
									end;
								elseif not (v91 < 56) then
									if v91 ~= 57 then
										v79[v90[10]] = v79[v90[5]] ~= v79[v90[4]];
									else
										v79[v90[10]][v90[9]] = v79[v90[4]];
									end;
								elseif v91 ~= 55 then
									v79[v90[10]] = v79[v90[5]] ^ v90[8];
								elseif v90[5] ~= 160 then
									if not v79[v90[10]] then
										u17 = u17 + 1;
									end;
								else
									u17 = u17 - 1;
									u12[u17] = {
										[3] = 74, 
										[10] = (v90[10] - 54) % 256, 
										[5] = (v90[4] - 54) % 256
									};
								end;							
							end;
							local v193 = v90[5];
							local v194 = v90[10];
							u18 = v194 + v193 - 1;
							while true do
								if #u13 > 0 then
									local v195 = {};
									for v196, v197 in p38, u13 do
										for v198, v199 in p38, v197 do
											if v199[1] == v79 and v199[2] >= 0 then
												local v200 = v199[2];
												if not v195[v200] then
													v195[v200] = { v79[v200] };
												end;
												v199[1] = v195[v200];
												v199[2] = 1;
											end;
										end;
									end;
								end;
								if p6 then
									break;
								end;							
							end;
							return p6, v194, v193;
						end);
						if not v86 then
							if p2(v87) ~= "string" then
								p41(v87, 0);
							elseif p28(v87, "^.-:%d+: ") then
								p41("LuraphScript:" .. (u15[u17 - 1] and "(internal)") .. ":" .. p40(v87), 0);
							else
								p41(v87, 0);
							end;
						elseif v87 then
							if v89 == 1 then
								return v79[v88]();
							else
								return v79[v88](p4(v79, v88 + 1, u18));
							end;
						elseif v88 then
							return p4(v79, v88, v89);
						end;
					end;
					p21(u16, p67);
					return p22;
				end;
				v74 = 1;
			end;
		elseif v74 ~= 0 then
			local u19 = v72;
			local function u20()
				local v201 = 1;
				local v202 = p22;
				while v201 < 2 do
					if v201 ~= 0 then
						v201 = 0;
					else
						v202 = { p22, p22, p22, {}, {}, p22, {}, p22, p22 };
						v201 = 2;
					end;				
				end;
				local v203 = 2;
				local v204 = p22;
				local v205 = p22;
				local v206 = p22;
				while true do
					if not (v203 <= 1) then
						if v203 ~= 2 then
							v206 = 1;
							v203 = 0;
						else
							v204 = {};
							v203 = 1;
						end;
					elseif v203 ~= 0 then
						v205 = {};
						v203 = 3;
					else
						v202[17] = v12();
						v203 = 4;
					end;
					if v203 > 3 then
						break;
					end;				
				end;
				local v207 = 1;
				local v208 = p22;
				local v209 = p22;
				while true do
					if not (v207 <= 1) then
						if not (v207 <= 2) then
							if v207 == 3 then
								v202[1] = v11();
								v207 = 2;
							else
								v209 = v11();
								v207 = 5;
							end;
						else
							v208 = v12();
							v207 = 0;
						end;
					elseif v207 == 0 then
						for v210 = 1, v208 do
							v202[4][v210 - 1] = u20();
						end;
						v207 = 4;
					else
						v202[9] = v11();
						v207 = 3;
					end;
					if v207 >= 5 then
						break;
					end;				
				end;
				local v211 = 0;
				while true do
					if v211 ~= 0 then
						v202[6] = v24(1, v209, 2) ~= 0;
						break;
					end;
					v202[2] = v24(1, v209, 1) ~= 0;
					v211 = 1;
					if p9 then
						break;
					end;				
				end;
				local v212 = 6;
				local v213 = p22;
				local v214 = p22;
				local v215 = p22;
				local v216 = p22;
				local v217 = p22;
				local v218 = p22;
				while v212 <= 12 do
					if not (v212 <= 5) then
						if not (v212 <= 8) then
							if not (v212 <= 10) then
								if v212 ~= 11 then
									v202[13] = v11();
									v212 = 13;
								else
									v214 = v11();
									v212 = 7;
								end;
							elseif v212 ~= 9 then
								v216 = v12() - p26;
								v212 = 2;
							else
								for v219 = 1, v213 do
									local v220 = p22;
									local v221 = p22;
									local v222 = 0;
									while v222 < 2 do
										if v222 ~= 0 then
											v221 = v11();
											v222 = 2;
										else
											v222 = 1;
										end;									
									end;
									local v223 = 0;
									while v223 < 1 do
										if v221 == 196 then
											v220 = v32();
										elseif v221 == 144 then
											v220 = p6;
										elseif v221 == 197 then
											v220 = v33() + v12();
										elseif v221 == p3 then
											v220 = p9;
										elseif v221 == 128 then
											v220 = v5(v45(v214), 3);
										elseif v221 == 122 then
											v220 = v5(v45(v214), v33() + v12());
										elseif v221 == 66 then
											v220 = v33();
										elseif v221 == 185 then
											v220 = v5(v45(v214), 3);
										elseif v221 == 11 then
											v220 = v33();
										elseif v221 == 16 then
											v220 = v5(v45(v214), v12());
										end;
										v223 = 1;									
									end;
									v204[v219 - 1] = v206;
									local v224 = { v220, {} };
									v205[v206] = v224;
									local v225 = 0;
									while p6 do
										if v225 ~= 0 then
											if v215 then
												local v226 = 1;
												while p6 do
													if v226 == 0 then
														u19 = u19 + 1;
														break;
													end;
													v71[u19] = v224;
													v226 = 0;												
												end;
											end;
											break;
										end;
										v206 = v206 + 1;
										v225 = 1;									
									end;
								end;
								v212 = 5;
							end;
						elseif v212 <= 6 then
							v202[8] = v11();
							v212 = 8;
						elseif v212 ~= 7 then
							v202[10] = v11();
							v212 = 3;
						else
							v215 = v11() ~= 0;
							v212 = 9;
						end;
					elseif not (v212 <= 2) then
						if not (v212 <= 3) then
							if v212 ~= 4 then
								v202[15] = v12();
								v212 = 10;
							else
								for v227 = 1, v218 do
									local v228 = v12();
									local v229 = 2;
									local v230 = p22;
									local v231 = p22;
									while v229 ~= 3 do
										if v229 <= 0 then
											for v232 = v228, v230 do
												v202[7][v232] = v231;
											end;
											v229 = 3;
										elseif v229 ~= 1 then
											v230 = v12();
											v229 = 1;
										else
											v231 = v12();
											v229 = 0;
										end;									
									end;
								end;
								v212 = 12;
							end;
						else
							v213 = v12() - 133771;
							v212 = 11;
						end;
					elseif v212 <= 0 then
						for v233 = 1, v216 do
							local v234 = { p22, p22, p22, p22, p22, p22, p22, p22, p22, p22 };
							local v235 = v44(v217);
							local v236 = 15;
							while p6 do
								if not (v236 <= 7) then
									if not (v236 <= 11) then
										if not (v236 <= 13) then
											if not (v236 <= 14) then
												if v236 == 15 then
													v234[18] = v24(27, v235, 15);
													v236 = 5;
												else
													v234[3] = v11();
													v236 = 1;
												end;
											else
												v234[16] = v24(2, v235, 18);
												v236 = 6;
											end;
										elseif v236 ~= 12 then
											v234[7] = v24(18, v235, 14);
											v236 = 16;
										else
											v234[5] = v24(9, v235, 14);
											v236 = 4;
										end;
									elseif not (v236 <= 9) then
										if v236 ~= 10 then
											v234[16] = v24(2, v235, 18);
											v236 = 7;
										else
											v234[3] = v11();
											v236 = 5;
										end;
									elseif v236 ~= 8 then
										v234[17] = v24(16, v235, 14);
										v236 = 1;
									else
										v234[19] = v24(29, v235, 28);
										v236 = 13;
									end;
								elseif v236 <= 3 then
									if not (v236 <= 1) then
										if v236 ~= 2 then
											v234[17] = v24(16, v235, 14);
											break;
										end;
										v234[5] = v24(9, v235, 14);
										v236 = 8;
									elseif v236 == 0 then
										v234[19] = v24(29, v235, 28);
										v236 = 1;
									else
										v234[10] = v24(8, v235, 6);
										v236 = 12;
									end;
								elseif not (v236 <= 5) then
									if v236 ~= 6 then
										v234[16] = v24(2, v235, 30);
										v236 = 8;
									else
										v234[10] = v24(8, v235, 6);
										v236 = 17;
									end;
								elseif v236 == 4 then
									v234[18] = v24(8, v235, 9);
									v236 = 3;
								else
									v234[4] = v24(9, v235, 23);
									v236 = 11;
								end;							
							end;
							v202[5][v233] = v234;
						end;
						v212 = 1;
					elseif v212 == 1 then
						v218 = v12();
						v212 = 4;
					else
						v217 = v11();
						v212 = 0;
					end;				
				end;
				v202[3] = v11();
				local v237 = v46[v202[3]];
				for v238 = 0, 1 do
					if v238 ~= 0 then
						return v202;
					end;
					for v239 = 1, v216 do
						local v240 = p22;
						local v241 = p22;
						local v242 = p22;
						local v243 = 4;
						while true do
							if v243 <= 2 then
								if not (v243 <= 0) then
									if v243 ~= 1 then
										v241 = v237[v240[3]];
										v243 = 1;
									else
										v242 = v241 == 0;
										v243 = 0;
									end;
								else
									if v241 == 2 then
										v240[7] = v239 + (v240[7] - 131071) + 1;
									end;
									v243 = 3;
								end;
							elseif not (v243 <= 3) then
								if v243 ~= 4 then
									if (v241 == 5 or v242) and v240[4] > 255 then
										local v244 = 3;
										local v245 = p22;
										local v246 = p22;
										while true do
											if not (v244 <= 1) then
												if v244 ~= 2 then
													v240[6] = p6;
													v244 = 1;
												else
													v246 = v205[v245];
													v244 = 0;
												end;
											elseif v244 ~= 0 then
												v245 = v204[v240[4] - p8];
												v244 = 2;
											else
												if v246 then
													local v247 = 0;
													local v248 = p22;
													while true do
														if v247 == 0 then
															v240[8] = v246[1];
															v247 = 1;
														else
															v248 = v246[2];
															v247 = 2;
														end;
														if v247 == 2 then
															break;
														end;													
													end;
													v248[#v248 + 1] = { v240, 8 };
												end;
												v244 = 4;
											end;
											if v244 >= 4 then
												break;
											end;										
										end;
									end;
									break;
								end;
								v240 = v202[5][v239];
								v243 = 2;
							else
								if v241 == 15 then
									local v249 = 0;
									local v250 = p22;
									local v251 = p22;
									while true do
										if not (v249 <= 0) then
											if v249 == 1 then
												if v251 then
													local v252 = 0;
													local v253 = p22;
													while v252 <= 1 do
														if v252 ~= 0 then
															v253 = v251[2];
															v252 = 2;
														else
															v240[1] = v251[1];
															v252 = 1;
														end;													
													end;
													v253[#v253 + 1] = { v240, 1 };
												end;
												break;
											end;
											v251 = v205[v250];
											v249 = 1;
										else
											v250 = v204[v240[7]];
											v249 = 2;
										end;
										if p9 then
											break;
										end;									
									end;
								end;
								v243 = 5;
							end;
							if p9 then
								break;
							end;						
						end;
						if (v241 == 14 or v242) and v240[5] > 255 then
							local v254 = p22;
							local v255 = p22;
							local v256 = 3;
							while true do
								if v256 <= 1 then
									if v256 == 0 then
										v255 = v205[v254];
										v256 = 2;
									else
										v254 = v204[v240[5] - 256];
										v256 = 0;
									end;
								elseif v256 ~= 2 then
									v240[2] = p6;
									v256 = 1;
								else
									if v255 then
										v240[9] = v255[1];
										local v257 = v255[2];
										v257[#v257 + 1] = { v240, 9 };
									end;
									v256 = 4;
								end;
								if v256 >= 4 then
									break;
								end;							
							end;
						end;
					end;
				end;
			end;
			v74 = 0;
		else
			v76 = p22();
			v74 = 5;
		end;	
	end;
	for v258 = 0, 1 do
		if v258 ~= 0 then
			v71 = p22;
		else
			v75[2] = v71;
		end;
	end;
	return p22(v4, v76, p22)(...);
endtype, 175, unpack, 104, true, "n", 256, false, 108, 119, "bor", 180, "`for` initial value must be a number", 113, 103, 233, bit32.band, "`for` limit value must be a number", tonumber, setfenv, nil, bit32.bxor, rawget, "<i8", 133795, bit32.lshift, string.match, 138, bit32.bnot, "", select, "<I4", bit32, getfenv, "#", "<d", next, assert, tostring, error, "..", "sub", "`for` step value must be a number", string.rep, "char", "byte", "gsub", string, 110, setmetatable, string.unpack, rawset, "v", pcall, "__mode", 2147483648, 120, table.insert, bit32.rshift, ...);
